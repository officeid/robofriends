{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","cardComponent","map","user","index","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","filteredRobots","filter","robot","toLowerCase","includes","length","fetch","then","response","json","users","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAgBeA,EAdF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OAEI,cADA,CACA,OAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,gCACI,6BAAKL,IACL,4BAAIC,WCYLK,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAS,cAAC,EAAD,CAETT,GAAIK,EAAOI,GAAOT,GAClBF,KAAMO,EAAOI,GAAOX,KACpBC,MAAOM,EAAOI,GAAOV,OAHhBU,MAQT,OACI,8BACCH,KCFMI,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,8BACI,uBAAOV,UAAU,mCAChBW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGRI,G,MATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAmBC,OAAO,SAAjE,SACKJ,EAAMK,aCsBJC,E,kDAxBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHD,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SACD,CACIJ,UAAS,M,oBAKrB,WACI,OAAGG,KAAKJ,MAAMC,SACH,uDAEJG,KAAKX,MAAMK,a,GApBEQ,aCiEbC,E,kDA1DX,aAAc,IAAD,8BAET,gBAQJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAP1C,EAAKZ,MAAQ,CACTlB,OAAS,GACT4B,YAAc,IANT,E,0CAcb,WACI,MAAgCN,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQ4B,EAAhB,EAAgBA,YACVG,EAAiB/B,EAAOgC,QAAO,SAAAC,GACjC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAASP,EAAYM,kBAGzD,OAAQlC,EAAOoC,OAIP,sBAAKxC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAgBgB,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQ+B,WARlC,8C,+BAgBR,WAAoB,IAAD,OACfM,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKlB,SAAS,CAAEvB,OAAQyC,W,GA1C5BC,IAAMlB,WCKTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.417ea08a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        // <h1>Robofriends</h1>\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"Robot\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"../components/Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent = robots.map((user, index)=>{\r\n        return ( <Card \r\n        key={index}\r\n        id={robots[index].id}\r\n        name={robots[index].name}\r\n        email={robots[index].email\r\n        }/>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div>\r\n        {cardComponent}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div >\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\"\r\n             type=\"search\"\r\n             placeholder=\"search robots\"\r\n             onChange={searchChange}\r\n             ></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY:'scroll',border:'5px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState(\r\n            {\r\n                hasError:true\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oops! Thats not good.</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends React.Component{\r\n\r\n    constructor(){\r\n\r\n        super();\r\n\r\n        this.state = {\r\n            robots : [],\r\n            searchfield : ''\r\n        };\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    render(){\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        });\r\n\r\n        return !robots.length ?\r\n            <h1>Loading...</h1> :\r\n        \r\n             (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f2\">Robofriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users=> this.setState({ robots: users}));\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n// const App = () => {\r\n//     return (\r\n//         <div className=\"tc\">\r\n//             <h1>Robofriends</h1>\r\n//             <SearchBox />\r\n//             <CardList robots={robots}/>\r\n//         </div>\r\n        \r\n//     );\r\n// }\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; // for DOM\nimport './index.css';\nimport App from \"./containers/App\";\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}